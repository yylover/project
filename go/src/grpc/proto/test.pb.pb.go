// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.pb

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	test.pb

It has these top-level messages:
	HelloParam
	HelloReply
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloParam struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *HelloParam) Reset()                    { *m = HelloParam{} }
func (m *HelloParam) String() string            { return proto1.CompactTextString(m) }
func (*HelloParam) ProtoMessage()               {}
func (*HelloParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloParam) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HelloParam) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type HelloReply struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Reply string `protobuf:"bytes,2,opt,name=reply" json:"reply,omitempty"`
}

func (m *HelloReply) Reset()                    { *m = HelloReply{} }
func (m *HelloReply) String() string            { return proto1.CompactTextString(m) }
func (*HelloReply) ProtoMessage()               {}
func (*HelloReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HelloReply) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

func init() {
	proto1.RegisterType((*HelloParam)(nil), "proto.HelloParam")
	proto1.RegisterType((*HelloReply)(nil), "proto.HelloReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for HelloServer service

type HelloServerClient interface {
	Hello(ctx context.Context, in *HelloParam, opts ...grpc.CallOption) (*HelloReply, error)
}

type helloServerClient struct {
	cc *grpc.ClientConn
}

func NewHelloServerClient(cc *grpc.ClientConn) HelloServerClient {
	return &helloServerClient{cc}
}

func (c *helloServerClient) Hello(ctx context.Context, in *HelloParam, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := grpc.Invoke(ctx, "/proto.HelloServer/Hello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HelloServer service

type HelloServerServer interface {
	Hello(context.Context, *HelloParam) (*HelloReply, error)
}

func RegisterHelloServerServer(s *grpc.Server, srv HelloServerServer) {
	s.RegisterService(&_HelloServer_serviceDesc, srv)
}

func _HelloServer_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServerServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HelloServer/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServerServer).Hello(ctx, req.(*HelloParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.HelloServer",
	HandlerType: (*HelloServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _HelloServer_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test.pb",
}

func init() { proto1.RegisterFile("test.pb", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x62, 0x2f, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x48, 0x12, 0x62, 0x2d, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x32, 0xe2, 0xe2, 0xf2, 0x48,
	0xcd, 0xc9, 0xc9, 0x0f, 0x48, 0x2c, 0x4a, 0xcc, 0x15, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d,
	0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0x04, 0xb8, 0x98, 0x73, 0x8b, 0xd3,
	0x25, 0x98, 0xc0, 0x42, 0x20, 0xa6, 0x92, 0x19, 0x54, 0x4f, 0x50, 0x6a, 0x41, 0x4e, 0x25, 0x56,
	0x3d, 0x22, 0x5c, 0xac, 0x45, 0x20, 0x49, 0xa8, 0x2e, 0x08, 0xc7, 0xc8, 0x8e, 0x8b, 0x1b, 0xac,
	0x2f, 0x38, 0xb5, 0xa8, 0x2c, 0xb5, 0x48, 0x48, 0x9f, 0x8b, 0x15, 0xcc, 0x15, 0x12, 0xd4, 0x03,
	0xbb, 0x45, 0x0f, 0xe1, 0x10, 0x29, 0x14, 0x21, 0xb0, 0x3d, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x31,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbd, 0x9c, 0x31, 0xde, 0xc4, 0x00, 0x00, 0x00,
}
